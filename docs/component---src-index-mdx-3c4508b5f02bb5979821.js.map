{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,Q,+LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,wBAGA,uEACA,iBAAQ,CACN,GAAM,cADR,cAGA,0BAAS,0BAAYC,WAAW,KAAvB,kBAAT,6HACA,4DACA,iBAAQ,CACN,GAAM,UADR,UAGA,2CAA0B,0BAAYA,WAAW,KAAvB,SAA1B,6BACA,iBAAQ,CACN,GAAM,YADR,cAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,mDADT,mDAGH,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,wDAAqH,0BAAYA,WAAW,KAAvB,cAArH,KACA,iBAAQ,CACN,GAAM,gBADR,kBAGA,iCAAgB,0BAAYA,WAAW,KAAvB,aAAhB,KAA2E,0BAAYA,WAAW,KAAvB,cAA3E,KAAuI,0BAAYA,WAAW,KAAvB,aAAvI,KAAkM,0BAAYA,WAAW,KAAvB,cAAlM,qBACA,iBAAQ,CACN,GAAM,WADR,aAGA,0C,sLAKJJ,EAAWK,gBAAiB","file":"component---src-index-mdx-3c4508b5f02bb5979821.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/huangbinjie/privatespace/react-layout-element/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layout-elementbeta\"\n    }}>{`Layout-Element(beta)`}</h1>\n    <p>{`一套布局组件，灵感来自 flutter，可以按照组件同名去 flutter 搜索相同的组件。`}</p>\n    <h2 {...{\n      \"id\": \"motivation\"\n    }}>{`Motivation`}</h2>\n    <p>{`在 `}<inlineCode parentName=\"p\">{`react-icecream`}</inlineCode>{` 的背景下，我们的业务代码已经很少需要写样式了，而我们的大部分工作是处理布局和实现逻辑。然而目前的工作方式却需要我们用一个不够语义化的 div 书写布局，搭配以 \"style.less\" 赋予其意义(大部分是布局)，是比较增加心智负担的写法。`}</p>\n    <p>{`本组件尝试一种新的写法，让我们业务仔回归初心，专心处理布局和实现逻辑。`}</p>\n    <h2 {...{\n      \"id\": \"design\"\n    }}>{`Design`}</h2>\n    <p>{`效仿 flutter 的设计，我们把 `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` 拆分成 3 个部分, 分别是：布局，约束和样式。`}</p>\n    <h3 {...{\n      \"id\": \"布局layout\"\n    }}>{`布局(Layout)`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://flutter.dev/docs/development/ui/layout\"\n      }}>{`https://flutter.dev/docs/development/ui/layout`}</a></p>\n    <p>{`目前从 `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` 拆分出来的布局属性有：display，margin，padding，overflow等等，具体需要参考 `}<inlineCode parentName=\"p\">{`IContainer`}</inlineCode>{`。`}</p>\n    <h3 {...{\n      \"id\": \"约束constraint\"\n    }}>{`约束(Constraint)`}</h3>\n    <p>{`只有 4 个属性 `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`max-height`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`min-height`}</inlineCode>{`。约束组件未实现，可作为样式使用。`}</p>\n    <h3 {...{\n      \"id\": \"样式style\"\n    }}>{`样式(Style)`}</h3>\n    <p>{`字体大小，字体颜色，背景色等等。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}