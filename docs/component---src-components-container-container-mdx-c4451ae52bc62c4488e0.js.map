{"version":3,"sources":["webpack:///../src/components/Container/Container.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Container","width","height","color","alignment","constraints","maxWidth","maxHeight","of","isMDXComponent"],"mappings":"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","file":"component---src-components-container-container-mdx-c4451ae52bc62c4488e0.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/huangbinjie/workspace/react-semantic-layout/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Container from '../Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"container\"\n    }}>{`Container`}</h2>\n    <p>{`容器。基础组件，提供各种布局效果。只能传一个子组件。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`内部使用 flex 布局，搭配其他元素使用的时候需注意。`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"不同与-flutter-的点\"\n    }}>{`不同与 flutter 的点`}</h2>\n    <p>{`个人觉得前端的实现需要结合前端的场景和实现难度和用户感受，不需要可以的照抄 flutter，所以总有一些不太一样的地方。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`约束的生效方式受限于前端实现，只能对自己约束，而不是子组件。`}</li>\n      <li parentName=\"ul\">{`为使 Container 能更胜任前端的日常工作，增加了类似 overflow 的属性。`}</li>\n      <li parentName=\"ul\">{`Continer 的盒模型会在某些条件下发生改变，比如设置了 `}<inlineCode parentName=\"li\">{`alignment`}</inlineCode>{` 属性后会变成 `}<inlineCode parentName=\"li\">{`flex`}</inlineCode>{`。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <Playground __position={0} __code={'<Container width=\\\"100px\\\" height=\\\"100px\\\" color=\\\"#ececec\\\">\\n  展示一个方块\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container width=\"100px\" height=\"100px\" color=\"#ececec\" mdxType=\"Container\">\n    展示一个方块\n  </Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"对齐\"\n    }}>{`对齐`}</h3>\n    <p>{`alignment 属性可以指定对齐方式。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`这是一种妥协。web 前端用户倾向于把 Container 当 div 使用。当不传 alignment 属性的时候，Container 的盒模型是 `}<inlineCode parentName=\"p\">{`block`}</inlineCode>{`，否则是 `}<inlineCode parentName=\"p\">{`flex`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"start\"\n    }}>{`start`}</h4>\n    <Playground __position={1} __code={'<Container alignment=\\\"start\\\" width=\\\"100px\\\" height=\\\"100px\\\" color=\\\"#ececec\\\">\\n  文字\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container alignment=\"start\" width=\"100px\" height=\"100px\" color=\"#ececec\" mdxType=\"Container\">\n    文字\n  </Container>\n    </Playground>\n    <h4 {...{\n      \"id\": \"center\"\n    }}>{`center`}</h4>\n    <Playground __position={2} __code={'<Container alignment=\\\"center\\\" width=\\\"100px\\\" height=\\\"100px\\\" color=\\\"#ececec\\\">\\n  文字\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container alignment=\"center\" width=\"100px\" height=\"100px\" color=\"#ececec\" mdxType=\"Container\">\n    文字\n  </Container>\n    </Playground>\n    <h4 {...{\n      \"id\": \"end\"\n    }}>{`end`}</h4>\n    <Playground __position={3} __code={'<Container alignment=\\\"end\\\" width=\\\"100px\\\" height=\\\"100px\\\" color=\\\"#ececec\\\">\\n  文字\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container alignment=\"end\" width=\"100px\" height=\"100px\" color=\"#ececec\" mdxType=\"Container\">\n    文字\n  </Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"有子组件\"\n    }}>{`有子组件`}</h3>\n    <p>{`有子组件的时候， Container 会紧贴子组件。`}</p>\n    <Playground __position={4} __code={'<Container color=\\\"#ececec\\\">展示一个方块</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container color=\"#ececec\" mdxType=\"Container\">\n    展示一个方块\n  </Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"没有子组件\"\n    }}>{`没有子组件`}</h3>\n    <p>{`没有子组件的时候，Container 会尽可能的大。`}</p>\n    <Playground __position={5} __code={'<Container width=\\\"100px\\\" height=\\\"100px\\\">\\n  <Container color=\\\"#ececec\\\"></Container>\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container width=\"100px\" height=\"100px\" mdxType=\"Container\">\n    <Container color=\"#ececec\" mdxType=\"Container\"></Container>\n  </Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"约束\"\n    }}>{`约束`}</h3>\n    <p>{`约束只对组件本身有效。`}</p>\n    <Playground __position={6} __code={'<Container\\n  constraints={{ maxWidth: \\'100px\\', maxHeight: \\'100px\\' }}\\n  width=\\\"200px\\\"\\n  height=\\\"200px\\\"\\n  color=\\\"#ececec\\\"\\n>\\n  100 的方块\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Container\n    }} mdxType=\"Playground\">\n  <Container constraints={{\n        maxWidth: '100px',\n        maxHeight: '100px'\n      }} width=\"200px\" height=\"200px\" color=\"#ececec\" mdxType=\"Container\">\n    100 的方块\n  </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Container} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}