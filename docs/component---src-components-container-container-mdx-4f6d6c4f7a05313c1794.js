(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{Fxmq:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return d}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var o=n("/FXl"),c=n("TjRS"),r=n("ZFoC"),a=n("LYL2");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/Container/Container.mdx"}});var b={_frontmatter:p},l=c.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,c={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(o.b)(l,i({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"container"},"Container"),Object(o.b)("p",null,"容器。基础组件，提供各种布局效果。"),Object(o.b)("p",null,"有子组件的时候，Container 会收缩紧贴子组件的高宽。没有子组件的时候，Container 会尽可能的大以占满父容器。"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"内部使用 flex 布局，搭配其他元素使用的时候需注意。")),Object(o.b)("h2",{id:"不同与-flutter-的点"},"不同与 flutter 的点"),Object(o.b)("p",null,"个人觉得前端的实现需要结合前端的场景和实现难度和用户感受，不需要可以的照抄 flutter，所以总有一些不太一样的地方。"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"结合前端的使用场景，我觉得 Container 允许传 children 而不是 child 相对合理点。"),Object(o.b)("li",{parentName:"ul"},"约束的生效方式受限于前端实现，只能对自己约束，而不是子组件。"),Object(o.b)("li",{parentName:"ul"},"为使 Container 能通用，增加了类似 direction 和 overflow 的属性。")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("h3",{id:"basic"},"Basic"),Object(o.b)(r.c,{__position:0,__code:'<Container width="100px" height="100px" color="#ececec">\n  展示一个方块\n</Container>',__scope:{props:n,DefaultLayout:c.a,Playground:r.c,Props:r.d,Container:a.a},mdxType:"Playground"},Object(o.b)(a.a,{width:"100px",height:"100px",color:"#ececec",mdxType:"Container"},"展示一个方块")),Object(o.b)("h3",{id:"有子组件"},"有子组件"),Object(o.b)("p",null,"有子组件的时候， Container 会紧贴子组件。"),Object(o.b)(r.c,{__position:1,__code:'<Container color="#ececec">展示一个方块</Container>',__scope:{props:n,DefaultLayout:c.a,Playground:r.c,Props:r.d,Container:a.a},mdxType:"Playground"},Object(o.b)(a.a,{color:"#ececec",mdxType:"Container"},"展示一个方块")),Object(o.b)("h3",{id:"没有子组件"},"没有子组件"),Object(o.b)("p",null,"没有子组件的时候，Container 会尽可能的大。"),Object(o.b)(r.c,{__position:2,__code:'<Container width="100px" height="100px">\n  <Container color="#ececec"></Container>\n</Container>',__scope:{props:n,DefaultLayout:c.a,Playground:r.c,Props:r.d,Container:a.a},mdxType:"Playground"},Object(o.b)(a.a,{width:"100px",height:"100px",mdxType:"Container"},Object(o.b)(a.a,{color:"#ececec",mdxType:"Container"}))),Object(o.b)("h3",{id:"约束"},"约束"),Object(o.b)("p",null,"约束只对组件本身有效。"),Object(o.b)(r.c,{__position:3,__code:'<Container\n  constraints={{ maxWidth: \'100px\', maxHeight: \'100px\' }}\n  width="200px"\n  height="200px"\n  color="#ececec"\n>\n  100 的方块\n</Container>',__scope:{props:n,DefaultLayout:c.a,Playground:r.c,Props:r.d,Container:a.a},mdxType:"Playground"},Object(o.b)(a.a,{constraints:{maxWidth:"100px",maxHeight:"100px"},width:"200px",height:"200px",color:"#ececec",mdxType:"Container"},"100 的方块")),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)(r.d,{of:a.a,mdxType:"Props"}))}d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/Container/Container.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-container-container-mdx-4f6d6c4f7a05313c1794.js.map